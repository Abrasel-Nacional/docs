openapi: 3.0.3
info:
  title: Open Delivery
  version: "1.0.0"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: Suporte Open Delivery
    email: suporte@opendelivery.org.br
    url: https://www.opendelivery.org.br
  x-logo:
    url: https://gui-camargo.github.io/OD/logo-open-delivery_small.png
    altText:  Open Delivery logo

  description: |-

    # Abstract

    Open Delivery is a standardization of the menus and orders for delivery operations.

    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non justo mi. Ut luctus nisl ac magna vulputate posuere. Cras dictum leo at turpis consectetur blandit. Ut id dui in justo iaculis ultricies. Duis at eros eu felis maximus aliquam. Etiam at metus sed nibh feugiat aliquet. Nullam quis nisi erat. Mauris feugiat tempus nulla vitae venenatis. Donec vel orci in metus tristique volutpat a a erat.
    
    # Introduction

    Open Delivery is a standardization of the menus and orders for delivery operations.

    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non justo mi. Ut luctus nisl ac magna vulputate posuere. Cras dictum leo at turpis consectetur blandit. Ut id dui in justo iaculis ultricies. Duis at eros eu felis maximus aliquam. Etiam at metus sed nibh feugiat aliquet. Nullam quis nisi erat. Mauris feugiat tempus nulla vitae venenatis. Donec vel orci in metus tristique volutpat a a erat.

    # Open Delivery API Evolution

    The Open Delivery Specification is versioned using Semantic Versioning 2.0.0 (semver) and follows the semver specification.

    The major.minor portion of the semver (for example 3.0) SHALL designate the ODS feature set. Typically, .patch versions address errors in this document, not the feature set. 

    Each new minor version of the Open Delivery Specification SHALL allow any Open Delivery document that is valid against any previous minor version of the Specification, within the same major version, to be updated to the new Specification version with equivalent semantics. Such an update MUST only require changing the openapi property to the new minor version.


##    # Error Handling
#
#    A API  retorna códigos de status HTTP para indicar sucesso ou falhas das
#    requisições.
#
#    Códigos `2xx` indicam sucesso. Códigos `4xx` indicam falhas causadas pelas
#    informações enviadas pelo cliente ou pelo estado atual das entidades. Códigos `5xx`
#    indicam problemas no serviço no lado da API.
#
#    As respostas de erro incluem no corpo detalhes do erro seguindo o
#    _schema_ da [RFC 7807](https://tools.ietf.org/html/rfc7807).
#
#    ## General
#
#    Esta seção reúne erros que poderiam ser retornados por quaisquer endpoints listados na API.
#
#    ### `RequisicaoInvalida`
#
#      * __Significado__: Requisição inválida.
#      * __HTTP Status Code__: [400 Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1).
#
#    ### `AcessoNegado`
#
#      * __Significado__: Requisição de participante autenticado que viola alguma regra de autorização.
#      * __HTTP Status Code__: [403 Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3).
#
#    ### `NaoEncontrado`
#
#      * __Significado__: Entidade não encontrada.
#      * __HTTP Status Code__: [404 Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4).
#
#    ### `PermanentementeRemovido`
#
#      * __Significado__: Indica que a entidade existia, mas foi permanentemente removida.
#      * __HTTP Status Code__: [410 Gone](https://tools.ietf.org/html/rfc7231#section-6.5.9).
#
#    ### `ErroInternoDoServidor`
#
#      * __Significado__: Condição inesperada ao processar requisição.
#      * __HTTP Status Code__: [500 Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1).
#
#    ### `ServicoIndisponivel`
#
#      * __Significado__: Serviço não está disponível no momento. Serviço solicitado pode estar em manutenção ou fora da janela de funcionamento.
#      * __HTTP Status Code__: [503 Service Unavailable](https://tools.ietf.org/html/rfc7231#section-6.6.4).
#
#    ### `IndisponibilidadePorTempoEsgotado`
#
#      * __Significado__: Indica que o serviço demorou além do esperado para retornar.
#      * __HTTP Status Code__: [504 Gateway Timeout](https://tools.ietf.org/html/rfc7231#section-6.6.5).
#
#
#    
#    ## Menu Errors
#
#    Esta seção reúne erros retornados pelos endpoints organizados sob a tag `Menu`.
#
#    ### `InvalidMenu`
#
#    * __Significado__: a cobrança em questão não foi encontrada para a location requisitada.
#    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4) ou [410](https://tools.ietf.org/html/rfc7231#section-6.5.9).
#    * __endpoints__: `GET /{pixUrlAccessToken}`, `GET /cobv/{pixUrlAccessToken}`.
#
#
#
#    ### `InvalidMerchant`
#
#    * __Significado__: a cobrança existe, mas a requisição é inválida.
#    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
#    * __endpoints__: `GET /cobv/{pixUrlAccessToken}`.
#
#    __Violações__:
#      - `codMun` não respeita o schema.
#      - `codMun` não é um código válido segundo a __[tabela de municípios do IBGE](https://www.ibge.gov.br/explica/codigos-dos-municipios.php)__.
#      - `DPP` não respeita o schema.
#      - `DPP` anterior ao momento presente.
#      - `DPP` superior à validade da cobrança em função dos parâmetros `calendario.dataDeVencimento`
#      e `calendario.validadeAposVencimento`. Exemplo: `dataDeVencimento` => 2020-12-25,
#      `validadeAposVencimento` => 10, `DPP` => 2021-01-05. Neste exemplo, o parâmetro `DPP` é
#      inválido considerando o contexto apresentado porque é uma data em que a cobrança
#      não poderá ser paga. A cobrança, neste exemplo, não será considerada válida
#      a partir da data 2021-01-05.
#
#    
#    ## Orders Erros
#    Reúne erros dos endpoints que tratam do gerenciamente dos Webhooks da API.
#
#    ### `WebhookOperacaoInvalida`
#    * __Significado__: a presente requisição busca criar um webhook sem respeitar o schema ou,
#    ainda, apresenta semântica inválida.
#    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
#    * __endpoints__: `PUT /webhook/{chave}`.
#
#    __Violações__ para o endpoint `PUT /webhook/{chave}`:
#      - o parâmetro {chave} não corresponde a uma chave DICT válida.
#      - o parâmetro {chave} não corresponde a uma chave DICT pertencente a este usuário recebedor.
#      - Campo webhook.webhookUrl não respeita o schema.
#
#    ### `WebhookNaoEncontrado`
#
#    * __Significado__: o webhook denotado por {chave} não encontra-se estabelecido.
#    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4).
#    * __endpoints__: `GET /webhook/{chave}`,  `DELETE /webhook/{chave}`
#
#    ### `WebhookConsultaInvalida`
#
#    * __Significado__: os parâmetros de consulta à lista de webhooks ativados não respeitam o schema
#    ou não fazem sentido semanticamente.
#    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
#    * __endpoints__: `GET /webhook`.
#
#    __Violações__ específicas para o endpoint `GET /webhook`:
#      - algum dos parâmetros informados para a consulta não respeita o _schema_.
#      - o _timestamp_ representado pelo parâmetro `fim` é anterior ao timestamp
#      representado pelo parâmetro `inicio`.
#      - o parâmetro `paginacao.paginaAtual` é negativo.
#      - o parâmetro `paginacao.itensPorPagina` é negativo.

tags:
  - name: menuOverview
    x-displayName: Menu Overview
    description: |-

      Explicações de fluxos do funcionamento do cardápio.
      
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non justo mi. Ut luctus nisl ac magna vulputate posuere. Cras dictum leo at turpis consectetur blandit. Ut id dui in justo iaculis ultricies. Duis at eros eu felis maximus aliquam. Etiam at metus sed nibh feugiat aliquet. Nullam quis nisi erat. Mauris feugiat tempus nulla vitae venenatis. Donec vel orci in metus tristique volutpat a a erat.

      Cras luctus ultrices arcu. Quisque non tortor euismod, mollis ligula id, scelerisque enim. In hac habitasse platea dictumst. Interdum et malesuada fames ac ante ipsum primis in faucibus. Donec et lacinia purus. Nunc porttitor orci mi, vitae egestas tortor tempus vel. Nam accumsan, justo in imperdiet ornare, nisl ipsum dignissim magna, in vestibulum dolor ante ac elit.
    
    externalDocs:
      description: Explicação dos fluxos
      url: http://www.google.com.br

  - name: menuEndpoints
    x-displayName: Menus Endpoints
    description: |-

  - name: ordersOverview
    x-displayName: Order Overview
    description: |-

      Explicações de fluxos do funcionamento do pedido

      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non justo mi. Ut luctus nisl ac magna vulputate posuere. Cras dictum leo at turpis consectetur blandit. Ut id dui in justo iaculis ultricies. Duis at eros eu felis maximus aliquam. Etiam at metus sed nibh feugiat aliquet. Nullam quis nisi erat. Mauris feugiat tempus nulla vitae venenatis. Donec vel orci in metus tristique volutpat a a erat.

      Cras luctus ultrices arcu. Quisque non tortor euismod, mollis ligula id, scelerisque enim. In hac habitasse platea dictumst. Interdum et malesuada fames ac ante ipsum primis in faucibus. Donec et lacinia purus. Nunc porttitor orci mi, vitae egestas tortor tempus vel. Nam accumsan, justo in imperdiet ornare, nisl ipsum dignissim magna, in vestibulum dolor ante ac elit.

  - name: ordersWebhook
    x-displayName: Webhook Events
    description: |-

        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non justo mi. Ut luctus nisl ac magna vulputate posuere. Cras dictum leo at turpis consectetur blandit. Ut id dui in justo iaculis ultricies. Duis at eros eu felis maximus aliquam. Etiam at metus sed nibh feugiat aliquet. Nullam quis nisi erat. Mauris feugiat tempus nulla vitae venenatis. Donec vel orci in metus tristique volutpat a a erat.
          <div align="center">
            <img alt="Workflow" src="https://user-images.githubusercontent.com/80956588/113513032-f459c680-953d-11eb-8ac3-9422e9970d0f.png" />
          </div>

  - name: ordersPolling
    x-displayName: Polling Events
    description: |-

          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non justo mi. Ut luctus nisl ac magna vulputate posuere. Cras dictum leo at turpis consectetur blandit. Ut id dui in justo iaculis ultricies. Duis at eros eu felis maximus aliquam. Etiam at metus sed nibh feugiat aliquet. Nullam quis nisi erat. Mauris feugiat tempus nulla vitae venenatis. Donec vel orci in metus tristique volutpat a a erat.
          <div align="center">
            <img alt="Workflow" src="https://user-images.githubusercontent.com/80956588/114452490-ded44480-9bae-11eb-9eaf-1fd8e7c7f142.png" />
          </div>

        

  - name: ordersDetails
    x-displayName: Order Detail
    description: |-

        Detalhes do Pedido

  - name: ordersStatus
    x-displayName: Status Update
    description: |-

        Endpoints de Atualização

  - name: ordersCancellation
    x-displayName: Cancellation
    description: |-

        Endpoints do Cancelamento

  - name: payment
    x-displayName: Payment Endpoint
    description: |-

        Endpoint de conciliação
  - name: menuEntitiesModel
    x-displayName: Menu Entities Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/MenuEntity" />
  - name: merchantModel
    x-displayName: Merchant Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Merchant" />
  - name: serviceModel
    x-displayName: Service Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Service" />
  - name: menuModel
    x-displayName: Menu Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Menu" />
  - name: itemModel
    x-displayName: Items Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Item" />
  - name: categoryModel
    x-displayName: Categories Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Category" />  
  - name: itemOfferModel
    x-displayName: Items Offers Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/ItemOffer" />
  - name: optionGroupModel
    x-displayName: Option Groups Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OptionGroup" />
  - name: availabilityModel
    x-displayName: Availability Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Availability" />
  - name: orderModel
    x-displayName: Order Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Order" />                    

x-tagGroups:
  - name: Models
    tags:
      - menuEntitiesModel
      - merchantModel
      - serviceModel
      - menuModel
      - itemModel
      - categoryModel
      - itemOfferModel
      - optionGroupModel
      - availabilityModel
      - orderModel
#  - name: Menus
#    tags:
#      - menuOverview
#      - menuEndpoints
#  - name: Orders
#    tags:
#      - ordersOverview
#      - ordersWebhook
#      - ordersPolling
#      - ordersDetails
#      - ordersStatus
#      - ordersCancellation
#  - name: Payments
#    tags:
#      - payment

paths:
  /merchants:
    get:
      operationId: "merchant"

      tags:
      - "menuEndpoints"
      summary: "Get list of merchants from a participant"
      security:
        - OAuth2: [cob.read]
      description: |-
          Endpoint para consultar os merchants de um estabelecimento
      responses:
        "200":
          description: "Dados da cobrança imediata."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Merchant"
        "403":
          $ref: "#/components/responses/AcessoNegado"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  /menus:
    get:
      parameters:
        - in: "query"
          name: "inicio"
          required: true
          schema:
            $ref:  "#/components/schemas/Inicio"
        - in: "query"
          name: "fim"
          required: true
          schema:
            $ref:  "#/components/schemas/Fim"
        - name: "cpf"
          in: "query"
          schema:
            type: "string"
            title: "CPF"
            pattern: "/^\\d{11}$/"
            description: "Filtro pelo CPF do devedor. Não pode ser utilizado ao mesmo tempo que o CNPJ."
        - name: "cnpj"
          in: "query"
          schema:
            type: "string"
            title: "CNPJ"
            pattern: "/^\\d{14}$/"
            description: "Filtro pelo CNPJ do devedor. Não pode ser utilizado ao mesmo tempo que o CPF."
        - name: "locationPresente"
          in: "query"
          schema:
            type: "boolean"
        - name: "status"
          in: "query"
          schema:
            type: "string"
            title: "Status da Cobrança"
            description: "Filtro pelo status da cobrança."
        - $ref: "#/components/parameters/paginaAtual"
        - $ref: "#/components/parameters/itensPorPagina"
      tags:
      - "menuEndpoints"
      summary: "Get specific information about Services and Menus of a Merchant"
      security:
        - OAuth2: [cob.read]  
      description: |-
          Endpoint para consultar todos os dados de um merchant específico, comodados básicos, cardápios e serviços
      responses:
        "200":
          description: "Lista de cobranças imediatas."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobsConsultadas"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getCobs1"
                getCobs2:
                  $ref: "#/components/examples/getCobs2"
        "403":
          $ref: "#/components/responses/AcessoNegado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  /event:
    post:
      parameters: 
        - name: "@id"
          in: "query"
          schema:
            allOf:
              - $ref: "#/components/schemas/TxId"
              - pattern: "[a-zA-Z0-9]{1,35}"
      tags:
      - "ordersWebhook"
      summary: "Send Events"
      security:
        - OAuth2: [pix.read]  
      description: "Envio de novos eventos via webhook"
      responses:
        "200":
          description: "lista dos Pix recebidos de acordo com o critério de busca."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PixConsultados"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getPix1"
        "403":
          $ref: "#/components/responses/AcessoNegado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/polling:":
    get:
      parameters: 
        - name: "@id"
          in: "query"
          schema:
            allOf:
              - $ref: "#/components/schemas/TxId"
              - pattern: "[a-zA-Z0-9]{1,35}"
      tags:
      - "ordersPolling"
      summary: "Get Events"
      security:
        - OAuth2: [pix.read]  
      description: "Recupera novos eventos via polling"
      responses:
        "200":
          description: "lista dos Pix recebidos de acordo com o critério de busca."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PixConsultados"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getPix1"
        "403":
          $ref: "#/components/responses/AcessoNegado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"

  "/acknowledge":
    post:
      parameters: 
        - name: "@id"
          in: "query"
          schema:
            allOf:
              - $ref: "#/components/schemas/TxId"
              - pattern: "[a-zA-Z0-9]{1,35}"
      tags:
      - "ordersPolling"
      summary: "Ack Events"
      security:
        - OAuth2: [pix.read]  
      description: "Reconhece eventos recebidos"
      responses:
        "200":
          description: "lista dos Pix recebidos de acordo com o critério de busca."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PixConsultados"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getPix1"
        "403":
          $ref: "#/components/responses/AcessoNegado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"

  /orders/{id}:
    get:
      parameters: 
        - name: "txid"
          in: "query"
          schema:
            allOf:
              - $ref: "#/components/schemas/TxId"
              - pattern: "[a-zA-Z0-9]{1,35}"

        - name: "cpf"
          in: "query"
          schema:
            type: "string"
            title: "CPF"
            pattern: "/^\\d{11}$/"
            description: "Filtro pelo CPF do pagador. Não pode ser utilizado ao mesmo tempo que o CNPJ."
        - name: "cnpj"
          in: "query"
          schema:
            type: "string"
            title: "CNPJ"
            pattern: "/^\\d{14}$/"
            description: "Filtro pelo CNPJ do pagador. Não pode ser utilizado ao mesmo tempo que o CPF."
        - $ref: "#/components/parameters/paginaAtual"
        - $ref: "#/components/parameters/itensPorPagina"
      tags:
      - "ordersDetails"
      summary: "Get Order Details"
      security:
        - OAuth2: [pix.read]  
      description: "Endpoint para consultar os detalhes de um pedido recebido"
      responses:
        "200":
          description: "lista dos Pix recebidos de acordo com o critério de busca."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PixConsultados"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getPix1"
        "403":
          $ref: "#/components/responses/AcessoNegado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  /confirm:
    post:
      parameters: 
        - name: "@id"
          in: "query"
          schema:
            allOf:
              - $ref: "#/components/schemas/TxId"
              - pattern: "[a-zA-Z0-9]{1,35}"
      tags:
      - "ordersStatus"
      summary: "Confirm"
      security:
        - OAuth2: [pix.read]  
      description: "Confirma recebimento do pedido"
      responses:
        "200":
          description: "lista dos Pix recebidos de acordo com o critério de busca."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PixConsultados"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getPix1"
        "403":
          $ref: "#/components/responses/AcessoNegado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  /dispatch:
    post:
      parameters: 
        - name: "@id"
          in: "query"
          schema:
            allOf:
              - $ref: "#/components/schemas/TxId"
              - pattern: "[a-zA-Z0-9]{1,35}"
      tags:
      - "ordersStatus"
      summary: "Dispatch"
      security:
        - OAuth2: [pix.read]  
      description: "Informa despache do pedido"
      responses:
        "200":
          description: "lista dos Pix recebidos de acordo com o critério de busca."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PixConsultados"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getPix1"
        "403":
          $ref: "#/components/responses/AcessoNegado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"

  /readyForPickup:
    post:
      parameters: 
        - name: "@id"
          in: "query"
          schema:
            allOf:
              - $ref: "#/components/schemas/TxId"
              - pattern: "[a-zA-Z0-9]{1,35}"
      tags:
      - "ordersStatus"
      summary: "Ready For Pickup"
      security:
        - OAuth2: [pix.read]  
      description: "Informa que o pedido está pronto para retirada"
      responses:
        "200":
          description: "lista dos Pix recebidos de acordo com o critério de busca."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PixConsultados"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getPix1"
        "403":
          $ref: "#/components/responses/AcessoNegado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"                              
components:
  securitySchemes:
    OAuth 2:
      description: |
        Open Delivery suports OAuth 2
        Get access to data while protecting your account credentials.
        OAuth2 is also a safer and more secure way to give you access.
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /token
          scopes:
            od.all: "Access to all Open Delivery APIs"
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
                        
    api_key:
      description: >
        Usage: Necessary to validate the order event notification sender.
      type: apiKey
      name: api_key
      in: header
  examples:
    cobBody1:
      summary: "Exemplo de criação de cobrança com vencimento 1"
      value:
        calendario:
          dataDeVencimento: "2020-12-31"
          validadeAposVencimento: 30
        loc:
          id: 789
        devedor:
          logradouro: "Alameda Souza, Numero 80, Bairro Braz"
          cidade: "Recife"
          uf: "PE"
          cep: "70011750"
          cpf: "12345678909"
          nome: "Francisco da Silva"
        valor:
          original: "123.45"
          multa:
            modalidade: "2"
            valorPerc: "15.00"
          juros:
            modalidade: "2"
            valorPerc: "2.00"
          desconto:
            modalidade: "1"
            descontoDataFixa:
              - data: "2020-11-30"
                valorPerc: "30.00"
        chave: "5f84a4c5-c5cb-4599-9f13-7eb4d419dacc"
        solicitacaoPagador: "Cobrança dos serviços prestados."
    cobBody2:
      summary: "Exemplo de criação de cobrança imediata 1"
      value:
        calendario:
          expiracao: 3600
        devedor:
          cnpj: "12345678000195"
          nome: "Empresa de Serviços SA"
        valor:
          original: "37.00"
          modalidadeAlteracao: 1
        chave: "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
        solicitacaoPagador: "Serviço realizado."
        infoAdicionais:
          - nome: "Campo 1"
            valor: "Informação Adicional1 do PSP-Recebedor"
          - nome: "Campo 2"
            valor: "Informação Adicional2 do PSP-Recebedor"
    cobBody3:
      summary: "Exemplo de revisão de cobrança 1"
      value:
        loc:
          id: 7768
        devedor:
          cpf: "12345678909"
          nome: "Francisco da Silva"
        valor:
          original: "123.45"
        solicitacaoPagador: "Cobrança dos serviços prestados."
    cobBody4:
      summary: "Exemplo de revisão de cobrança 2"
      value:
        valor:
          original: "567.89"
        solicitacaoPagador: "Informar cartão fidelidade"
    cobBody5:
      summary: "Exemplo de revisão de cobrança 3"
      value:
        status: REMOVIDA_PELO_USUARIO_RECEBEDOR
    loteCobVBody1:
      summary: "Exemplo de criação de lote de cobranças com vencimento 1"
      value:
        descricao:  "Cobranças dos alunos do turno vespertino"
        cobsv:
          - calendario:
              dataDeVencimento: "2020-12-31"
              validadeAposVencimento: 30
            txid: "fb2761260e554ad593c7226beb5cb650"
            loc:
              id: 789
            devedor:
              logradouro: "Alameda Souza, Numero 80, Bairro Braz"
              cidade: "Recife"
              uf: "PE"
              cep: "70011750"
              cpf: "08577095428"
              nome: "João Souza"
            valor:
              original: "100.00"
            chave: "7c084cd4-54af-4172-a516-a7d1a12b75cc"
            solicitacaoPagador: "Informar matrícula"
          - calendario:
              dataDeVencimento: "2020-12-31"
              validadeAposVencimento: 30
            txid: "7978c0c97ea847e78e8849634473c1f1"
            loc:
              id: 57221
            devedor:
              logradouro: "Rua 15, Numero 1, Bairro Campo Grande"
              cidade: "Recife"
              uf: "PE"
              cep: "70055751"
              cpf: "15311295449"
              nome: "Manoel Silva"
            valor:
              original: "100.00"
            chave: "7c084cd4-54af-4172-a516-a7d1a12b75cc"
            solicitacaoPagador: "Informar matrícula"
    loteCobVBodyRevisado1:
      summary: "Exemplo de revisão de lote de cobranças com vencimento 1"
      value:
        cobsv:
          - calendario:
              dataDeVencimento: "2020-01-10"
            txid: "fb2761260e554ad593c7226beb5cb650"
            valor:
              original: "110.00"
          - calendario:
              dataDeVencimento: "2020-01-10"
            txid: "7978c0c97ea847e78e8849634473c1f1"
            valor:
              original: "110.00"
    cobResponse1:
      summary: "Exemplo de cobrança imediata 1"
      value:
        calendario:
          criacao: "2020-09-09T20:15:00.358Z"
          expiracao: 3600
        txid: "7978c0c97ea847e78e8849634473c1f1"
        revisao: 0
        loc:
          id: 789
          location: "pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25"
          tipoCob: "cob"
        location: "pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25"
        status: "ATIVA"
        devedor:
          cnpj: "12345678000195"
          nome: "Empresa de Serviços SA"
        valor:
          original: "567.89"
          modalidadeAlteracao: 1
        chave: "a1f4102e-a446-4a57-bcce-6fa48899c1d1"
        solicitacaoPagador: "Informar cartão fidelidade"
    cobResponse2:
      summary: "Exemplo de cobrança imediata 2"
      value:
        calendario:
          criacao: "2020-09-09T20:15:00.358Z"
          expiracao: 3600
        txid: "655dfdb1a4514b8fbb58254b958913fb"
        revisao: 1
        loc:
          id: 567
          location: "pix.example.com/qr/1dd7f893a58e417287028dc33e21a403"
        location: "pix.example.com/qr/1dd7f893a58e417287028dc33e21a403"
        status: "CONCLUIDA"
        devedor:
          cnpj: "12345678000195"
          nome: "Empresa de Serviços SA"
        valor:
          original: "100.00"
          modalidadeAlteracao: 0
        chave: "40a0932d-1918-4eee-845d-35a2da1690dc"
        solicitacaoPagador: "Informar cartão fidelidade"
        pix:
        - endToEndId: "E12345678202009091221kkkkkkkkkkk"
          txid: "655dfdb1a4514b8fbb58254b958913fb"
          valor: "110.00"
          horario: "2020-09-09T20:15:00.358Z"
          infoPagador: "0123456789"
          devolucoes:
          - id: "123ABC"
            rtrId: "Dxxxxxxxx202009091221kkkkkkkkkkk"
            valor: "10.00"
            horario:
              solicitacao: "2020-09-09T20:15:00.358Z"
            status: "EM_PROCESSAMENTO"
    cobResponse3:
      summary: "Exemplo de cobrança revisada 1"
      value:
        calendario:
          criacao: "2020-09-09T20:15:00.358Z"
          expiracao: 3600
        txid: "7978c0c97ea847e78e8849634473c1f1"
        revisao: 1
        loc:
          id: 789
          location: "pix.example.com/qr/b1/9d36b84fc70b478fb95c12729b90ca25"
          tipoCob: "cob"
        location: "pix.example.com/qr/v1/9d36b84fc70b478fb95c12729b90ca25"
        status: "ATIVA"
        devedor:
          cnpj: "12345678000195"
          nome: "Empresa de Serviços SA"
        valor:
          original: "567.89"
          modalidadeAlteracao: 0
        chave: "a1f4102e-a446-4a57-bcce-6fa48899c1d1"
        solicitacaoPagador: "Informar cartão fidelidade"
    cobResponse4:
      summary: "Exemplo de cobrança com vencimento 1"
      value:
        calendario:
          criacao: "2020-09-09T20:15:00.358Z"
          dataDeVencimento: "2020-12-31"
          validadeAposVencimento: 30
        txid: "7978c0c97ea847e78e8849634473c1f1"
        revisao: 0
        loc:
          id: 789
          location: "pix.example.com/qr/c2/cobv/9d36b84fc70b478fb95c12729b90ca25"
          tipoCob: "cobv"
        status: "ATIVA"
        devedor:
          logradouro: "Rua 15, Numero 1, Bairro Luz"
          cidade: "Belo Horizonte"
          uf: "MG"
          cep: "99000750"
          cnpj: "12345678000195"
          nome: "Empresa de Serviços SA"
        recebedor:
          logradouro: "Rua 15 Numero 1200, Bairro São Luiz"
          cidade: "São Paulo"
          uf: "SP"
          cep: "70800100"
          cnpj: "56989000019533"
          nome: "Empresa de Logística SA"
        valor:
          original: "567.89"
        chave: "a1f4102e-a446-4a57-bcce-6fa48899c1d1"
        solicitacaoPagador: "Informar cartão fidelidade"
    loteCobVResponse1:
      summary: "Exemplo de lote de cobranças com vencimento 1"
      value:
        descricao:  "Cobranças dos alunos do turno vespertino"
        criacao: "2020-11-01T20:15:00.358Z"
        cobsv:
          - criacao: "2020-11-01T20:15:00.358Z"
            txid: "fb2761260e554ad593c7226beb5cb650"
            status: "CRIADA"
          - txid: "7978c0c97ea847e78e8849634473c1f1"
            status: "NEGADA"
            problema:
              type: https://pix.bcb.gov.br/api/v2/error/CobVOperacaoInvalida
              title: "Cobrança inválida."
              status: 400
              detail: "A requisição que busca alterar ou criar uma cobrança com vencimento não respeita o schema ou está semanticamente errada."
              violacoes:
              - razao: "O objeto cobv.devedor não respeita o schema."
                propriedade: "cobv.devedor"
    loteCobVResponse2:
      summary: "Exemplo de lote de cobranças com vencimento 2"
      value:
        descricao:  "Cobranças dos assinantes anuais"
        criacao: "2020-11-17T20:00:00.358Z"
        cobsv:
          - criacao: "2020-11-17T20:00:00.358Z"
            txid: "06601eaa3822423fbe897f613b983e01"
            status: "CRIADA"
          - criacao: "2020-11-17T20:00:00.358Z"
            txid: "4e07059760d54cf493de6e7f1fbfad9a"
            status: "CRIADA"
    payloadLocationBody1:
      summary: "Exemplo de Payload Location 1"
      value:
        tipoCob: "cob"
    payloadLocationBody2:
      summary: "Exemplo de Payload Location 2"
      value:
        tipoCob: "cobv"
    payloadLocationResponse1:
      summary: "Exemplo de Payload Location 1"
      value:
        id: 7716
        txid: "fda9460fe04e4f129b72863ae57ee22f"
        location: "pix.example.com/qr/v2/cobv/2353c790eefb11eaadc10242ac120002"
        tipoCob: "cobv"
        criacao: "2020-03-11T21:19:51.013Z"
    payloadLocationResponse2:
      summary: "Exemplo de Payload Location 2"
      value:
        id: 856
        txid: "31e08604f9ce459bb59672332af8d672"
        location: "pix.example.com/qr/v2/cobv/39c9f435c6324867aa1dec1260e1127c"
        tipoCob: "cobv"
        criacao: "2020-02-10T19:22:52.013Z"
    payloadLocationResponse3:
      summary: "Exemplo de Payload Location 3"
      value:
        id: 2316
        txid: "eb9d87f36fca4c92b7d5ec48e2ee3853"
        location: "pix.example.com/qr/v2/a8534e273ecb47d3ac30613104544466"
        tipoCob: "cob"
        criacao: "2020-05-31T19:39:54.013Z"
    payloadLocationResponse4:
      summary: "Exemplo de Payload Location 3"
      value:
        id: 2316
        location: "pix.example.com/qr/v2/a8534e273ecb47d3ac30613104544466"
        tipoCob: "cob"
        criacao: "2020-05-31T19:39:54.013Z"
    payloadLocationResponse5:
      summary: "Exemplo de Payload Location 1"
      value:
        id: 7716
        location: "pix.example.com/qr/v2/2353c790eefb11eaadc10242ac120002"
        tipoCob: "cob"
        criacao: "2020-03-11T21:19:51.013Z"
    payloadLocationResponse6:
      summary: "Exemplo de Payload Location 2"
      value:
        id: 856
        location: "pix.example.com/qr/v2/cobv/39c9f435c6324867aa1dec1260e1127c"
        tipoCob: "cobv"
        criacao: "2020-02-10T19:22:52.013Z"
    pixResponse1:
      summary: "Exemplo de Pix 1"
      value:
        endToEndId: "E12345678202009091221abcdef12345"
        txid: "cd1fe328c875481285a6f233ae41b662"
        valor: "100.00"
        horario: "2020-09-10T13:03:33.902Z"
        infoPagador: "Reforma da casa"
        devolucoes:
        - id: "000AAA111"
          rtrId: "D12345678202009091000abcde123456"
          valor: "11.00"
          horario:
            solicitacao: "2020-09-10T13:03:33.902Z"
          status: EM_PROCESSAMENTO
    pixResponse2:
      summary: "Exemplo de Pix 2"
      value:
        endToEndId: "E12345678202009091221ghijk78901234"
        txid: "5b933948f3224266b1050ac54319e775"
        valor: "200.00"
        horario: "2020-09-10T13:03:33.902Z"
        infoPagador: "Revisão do carro"
    webhookBody1:
      summary: "Exemplo de configuração de Webhook 1"
      value:
        webhookUrl: "https://pix.example.com/api/webhook/"
    webhookResponse1:
      summary: "Exemplo de consulta de Webhook 1"
      value:
        webhookUrl: "https://pix.example.com/api/webhook/"
        chave: "40a0932d-1918-4eee-845d-35a2da1690dc"
        criacao: "2020-11-11T10:15:00.358Z"
    pixWebhook1:
      summary: "Exemplo de Webhook Pix 1"
      value:
        endToEndId: "E12345678202009091221kkkkkkkkkkk"
        txid: "c3e0e7a4e7f1469a9f782d3d4999343c"
        valor: "110.00"
        horario: "2020-09-09T20:15:00.358Z"
        infoPagador: "0123456789"
        devolucoes:
          id: "123ABC"
          rtrId: "D12345678202009091221abcdf098765"
          valor: "10.00"
          horario:
            solicitacao: "2020-09-09T20:15:00.358Z"
          status: "EM_PROCESSAMENTO"
    pixWebhook2:
      summary: "Exemplo de Webhook Pix 2"
      value:
        endToEndId: "E87654321202009091221dfghi123456"
        txid: "971122d8f37211eaadc10242ac120002"
        valor: "110.00"
        horario: "2020-09-09T20:15:00.358Z"
        infoPagador: "0123456789"
    devolucaoResponse1:
      summary: "Exemplo de devolução 1"
      value:
        id: "123456"
        rtrId: D12345678202009091000abcde123456
        valor: "7.89"
        horario:
          solicitacao: "2020-09-11T15:25:59.411Z"
        status: EM_PROCESSAMENTO
    devolucaoResponse2:
      summary: "Exemplo de devolução 2"
      value:
        id: "502"
        rtrId: D12345678202011111000fghij789012
        valor: "20.00"
        horario:
          solicitacao: "2020-09-11T15:25:59.411Z"
        status: NAO_REALIZADO
        motivo: "Negado por timeout"
    devolucaoSolicitada1:
      summary: "Exemplo de solicitação de devolução 1"
      value:
        valor: "7.89"
    cobPayload1:
      summary: "Exemplo de payload de cobrança imediata 1"
      value:
        calendario:
          criacao: "2020-09-15T19:39:54.013Z"
          apresentacao: "2020-04-01T18:00:00Z"
          expiracao: 3600
        txid: "fc9a4366ff3d4964b5dbc6c91a8722d3"
        revisao: 3
        status: "ATIVA"
        valor:
          original: "500.00"
          modalidadeAlteracao: 0
        chave: "7407c9c8-f78b-11ea-adc1-0242ac120002"
        solicitacaoPagador: "Informar cartao fidelidade"
        infoAdicionais:
        - nome: "quantidade"
          valor: "2"      
    cobPayload2:
      summary: "Exemplo de payload de cobrança com vencimento 1"
      value:
        calendario:
          criacao: "2020-09-15T19:39:54.013Z"
          apresentacao: "2020-04-01T18:00:00Z"
          dataDeVencimento: "2020-12-31"
          validadeAposVencimento: 30
        devedor:
          cnpj: "56989000019533"
          nome: "Empresa de Alimentos SA"
        recebedor:
          logradouro: "Rua 20 Numero 70, Bairro Luz"
          cidade: "Belo Horizonte"
          uf: "MG"
          cep: "55120750"
          cnpj: "58900633120711"
          nome: "Empresa de Abastecimento SA"
        txid: "fc9a4366ff3d4964b5dbc6c91a8722d3"
        revisao: 3
        status: "ATIVA"
        valor:
          original: "123.45"
          multa: "15.00"
          juros: "2.00"
          final: "140.45"
        chave: "7407c9c8-f78b-11ea-adc1-0242ac120002"
        solicitacaoPagador: "Informar cartao fidelidade"
        infoAdicionais:
        - nome: "quantidade"
          valor: "2"      
    getCobs1:
      summary: "Hambuguer example"
      value:
        parametros:
          inicio: "2020-04-01T00:00:00Z"
          fim: "2020-04-02T10:00:00Z"
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 2
        cobs:
          - allOf:
            - $ref: "#/components/examples/cobResponse1/value"
          - allOf:
            - $ref: "#/components/examples/cobResponse2/value"
    getCobs2:
      summary: "Pizza Example"
      value:
        parametros:
          inicio: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 1
        cobs:
          - allOf:
            - $ref: "#/components/examples/cobResponse1/value"
    getCobsV1:
      summary: "Exemplo de retorno da consulta de cobranças com vencimento 1"
      value:
        parametros:
          inicio: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 1
        cobs:
          - allOf:
            - $ref: "#/components/examples/cobResponse4/value"
    getPix1:
      summary: "Exemplo de retorno da consulta de Pix 1"
      value:
        parametros:
          inicio: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 2
        pix:
          - allOf:
            - $ref: "#/components/examples/pixResponse1/value"
          - allOf:
            - $ref: "#/components/examples/pixResponse2/value"
    getLotesCobsV:
      summary: "Exemplo de retorno da consulta de Pix 1"
      value:
        parametros:
          inicio: "2020-01-01T00:00:00Z"
          fim: "2020-12-01T23:59:59Z"
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 2
        lotes:
          - allOf:
            - $ref: '#/components/examples/loteCobVResponse1/value'
          - allOf:
            - $ref: '#/components/examples/loteCobVResponse2/value'
    getPayloadLocation1:
      summary: "Exemplo de retorno da consulta de locations 1"
      value:
        parametros:
          inicio: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 3
        loc:
          - allOf:
            - $ref: '#/components/examples/payloadLocationResponse1/value'
          - allOf:
            - $ref: '#/components/examples/payloadLocationResponse2/value'
          - allOf:
            - $ref: '#/components/examples/payloadLocationResponse3/value'
    getWebhook1:
      summary: "Exemplo de retorno da consulta de Webhooks 1"
      value:
        parametros:
          inicio: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 1
        webhooks:
          - allOf:
            - $ref: '#/components/examples/webhookResponse1/value'
    RequisicaoInvalidaCobExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobOperacaoInvalida
        title: "Cobrança inválida."
        status: 400
        detail: "A requisição que busca alterar ou criar uma cobrança para pagamento imediato não respeita o schema ou está semanticamente errada."
        violacoes:
        - razao: "O campo cob.valor.original não respeita o schema."
          propriedade: "cob.valor.original"
    OperacaoInvalidaCobExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobOperacaoInvalida
        title: "Operação inválida."
        status: 400
        detail: "A requisição que busca alterar ou criar uma cobrança para pagamento imediato não respeita o schema ou está semanticamente errada."
    RequisicaoInvalidaCobVExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobVOperacaoInvalida
        title: "Cobrança inválida."
        status: 400
        detail: "A requisição que busca alterar ou criar uma cobrança com vencimento não respeita o schema ou está semanticamente errada."
        violacoes:
        - razao: "O objeto cobv.devedor não respeita o schema."
          propriedade: "cobv.devedor"
    OperacaoInvalidaCobVExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobVOperacaoInvalida
        title: "Operação inválida."
        status: 400
        detail: "Cobrança não encontra-se mais com o status ATIVA, somente cobranças ativas podem ser revisadas."
    RequisicaoInvalidaCobPayloadExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado
        title: "Cobrança não encontrada."
        status: 404
        detail: "A cobrança em questão não foi encontrada para a location requisitada."
    RequisicaoInvalidaLoteCobVExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/LoteCobVOperacaoInvalida
        title: "Lote de cobranças inválido."
        status: 400
        detail: "A requisição que busca alterar ou criar um lote de cobranças com vencimento não respeita o schema ou está semanticamente errada."
        violacoes:
        - razao: "O objeto loteCobV.cobsV não respeita o schema."
          propriedade: "loteCobV.cobsV"
        - razao: "O campo loteCobV.descricao não respeita o schema."
          propriedade: "loteCobV.descricao"
    RequisicaoInvalidaDevolucaoExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/PixDevolucaoInvalida
        title: "Devolução inválida."
        status: 400
        detail: "A presente requisição de devolução não respeita o schema ou não faz sentido semanticamente."
    RequisicaoInvalidaWebhookExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/WebhookOperacaoInvalida
        title: "Webhook inválido."
        status: 400
        detail: "A presente requisição busca criar um webhook sem respeitar o schema ou, ainda, com sentido semanticamente inválido."
    RequisicaoInvalidaLocationExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/PayloadLocationOperacaoInvalida
        title: "PayloadLocation inválido."
        status: 400
        detail: "A presente requisição busca criar uma location sem respeitar o schema estabelecido."
    AcessoNegadoExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
        title: "Acesso Negado"
        status: 403
        detail: "Requisição de participante autenticado que viola alguma regra de autorização."
    NaoEncontradoExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/NaoEncontrado
        title: "Não Encontrado"
        status: 404
        detail: "Entidade não encontrada."
    ServicoIndisponivelExample1:
      summary: "Exemplo de erro da requisição 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/ServicoIndisponivel
        title: "Serviço Indisponível"
        status: 503
        detail: "Serviço não está disponível no momento. Serviço solicitado pode estar em manutenção ou fora da janela de funcionamento."     
  requestBodies:
    CobBody:
      description: "Dados para geração da cobrança imediata."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/CobSolicitada"
          examples:
            exemplo1:
              $ref: "#/components/examples/cobBody2"
    CobVBody:
      description: "Dados para geração da cobrança com vencimento."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/CobVSolicitada"
          examples:
            exemplo1:
              $ref: "#/components/examples/cobBody1"
    LoteCobVBody:
      description: "Dados para geração de lote de cobranças com vencimento."
      required: true
      content:
        "application/json":
          schema:
            required: ["descricao","cobsv"]
            properties:
              descricao:
                type: "string"
                title: "Descrição do lote"
              cobsv:
                type: "array"
                items:
                  allOf:
                    - type: "object"
                      required: ["txid"]
                      properties:
                        txid:
                          $ref: "#/components/schemas/TxId"
                    - $ref: "#/components/schemas/CobVSolicitada"
          examples:
            exemplo1:
              $ref: "#/components/examples/loteCobVBody1"
    LoteCobVBodyRevisado:
      description: "Dados para geração de lote de cobranças com vencimento."
      required: true
      content:
        "application/json":
          schema:
            properties:
              descricao:
                type: "string"
                title: "Descrição do lote"
              cobsv:
                type: "array"
                items:
                  allOf:
                    - type: "object"
                      required: ["txid"]
                      properties:
                        txid:
                          $ref: "#/components/schemas/TxId"
                    - $ref: "#/components/schemas/CobVRevisada"
          examples:
            exemplo1:
              $ref: "#/components/examples/loteCobVBodyRevisado1"
    CobBodyRevisada:
      description: "Dados para geração da cobrança."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/CobRevisada"
          examples:
            exemplo1:
              $ref: "#/components/examples/cobBody3"
            exemplo2:
              $ref: "#/components/examples/cobBody4"
            exemplo3:
              $ref: "#/components/examples/cobBody5"             
    CobVBodyRevisada:
      description: "Dados para geração da cobrança."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/CobVRevisada"
          examples:
            exemplo1:
              $ref: "#/components/examples/cobBody3"
            exemplo2:
              $ref: "#/components/examples/cobBody4"
            exemplo3:
              $ref: "#/components/examples/cobBody5"             
    PayloadLocationBody:
      description: "Dados para geração da location."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/PayloadLocationSolicitada"
          examples:
            exemplo1:
              $ref: "#/components/examples/payloadLocationBody1"
    DevolucaoBody:
      description: "Dados para pedido de devolução."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/DevolucaoSolicitada"
          examples:
            exemplo1:
              $ref: "#/components/examples/devolucaoSolicitada1"
    WebhookConfigBody:
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/WebhookSolicitado"
          examples:
            exemplo1:
              $ref: "#/components/examples/webhookBody1"
    WebhookPixBody:
      description: "Dados para notificação dos Pix."
      required: true
      content:
        "application/json":
          schema:
            properties:
              pix:
                type: "array"
                items:
                  $ref: "#/components/schemas/Pix"
                example:
                  - allOf:
                    - $ref: "#/components/examples/pixWebhook1/value"
                  - allOf:
                    - $ref: "#/components/examples/pixWebhook2/value"
  schemas:

    MenuEntity:
      type: "object"
      title: "MenuEntity"
      required: ["lastUpdate", "TTL", "merchant","services", "items", "menus", "categories", "itemOffers"]
      properties:
        lastUpdate:
          type: "string"
          format: "date-time"
          description:  "The last modified date and time in ISO timestamp format but with type String. \n\nThis should be used in conjuction of the TTL field to update the information on the ordering aplication."
        TTL:
          type: "integer"
          description:  "Time to Live (in seconds). 
          \nMin: 500
          Max: 86400. 
          \nA new request must be done when the TTL expires."
          
        merchant:
          type: "object"
          description:  "A required entity to implement. Describes a merchant."
          allOf:
            - $ref: "#/components/schemas/Merchant"
        services:
          type: "array"
          description:  "A required entity to implement. Describes food ordering services details for a merchant."
          items:
            type: "object"            
            allOf:
              - $ref: "#/components/schemas/Service" 
        items:
          type: "array"
          description:  "A required entity to implement. Describes an array of items. To be used with an `ItemOffer` or an `Option`."
          items:
            type: "object"            
            allOf:
              - $ref: "#/components/schemas/Item" 
        menus:
          type: "array"
          description:  "A required entity to implement. Describes an array of menus."
          items:
            type: "object"            
            allOf:
              - $ref: "#/components/schemas/Menu"
        categories:
          type: "array"
          description:  "A required entity to implement. Describes an array of sections in the menu where `ItemOffers` will be showed."
          items:
            type: "object"            
            allOf:
              - $ref: "#/components/schemas/Category" 
        itemOffers:
          type: "array"
          description:  "A required entity to implement. Describes an array of offers for the `Items`."
          items:
            type: "object"            
            allOf:
              - $ref: "#/components/schemas/ItemOffer"
        optionGroups:
          type: "array"
          description:  "An optional entity to implement. Describes additional options of an `ItemOffer`."
          items:
            type: "object"            
            allOf:
              - $ref: "#/components/schemas/OptionGroup"
        availability:
          type: "array"
          description:  "An optional entity to implement. Describes the time period during which a `Category` or an `ItemOffer` entity is served."
          items:
            type: "object"            
            allOf:
              - $ref: "#/components/schemas/Availability"
                                     

    Merchant:
      type: "object"
      title: "Merchant"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "Unique Identifier. Must be formatted with `Merchant Document + UUID`
          \n\n This @id must be generated by the company responsible for the merchant's menu and have to be informed in the Order object by the ordering application."
        "@type":
          type: "string"
          enum:
          - MERCHANT
        status:
          type: "string"
          description:  "Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays)."    
          enum:
            - AVAILABLE
            - UNAVAILABLE    
        name:
          type: "string"
          description:  "Public Name"
          maxLength: 500
        document:
          type: "string"
          description:  "Document"
          pattern: "/^\\d{14}$/"
        corporateName:
          type: "string"
          description:  "Corporate Name"
          maxLength: 500
        description:
          type: "string"
          description:  "Merchant Description"          
        averageTicket:
          type: "number"
          description:  "Average Ticket. Can be used to show the price range of items available at the merchant."          
        averagePreparationTime:
          type: "number"
          description:  "Average amount of time preparing an order takes, in minutes." 
        minOrderValue:
          type: "object"
          description:  "Minimum order value that the merchant accepts." 
          allOf:
            - $ref: "#/components/schemas/Price"
        merchantType:
          type: "string"
          description:  "Merchant Type"
          enum:
            - "RESTAURANT"
            - "STORE"
        merchantCategories:
          type: "array"
          description:  "Merchant Categories"
          items:
            type: "string"
            enum:
              - "JAPANESE"
              - "PIZZA"
              - "HAMBURGUERS"           
        address:
          type: "object"
          description:  "Address"
          allOf:
            - $ref: "#/components/schemas/Address" 
        contactEmails:
          type: "array"
          description: "Contact Emails"
          items:
            type: "string"
        contactPhones:
          type: "object"
          description:  "Contact Phones"
          allOf:
            - $ref: "#/components/schemas/ContactPhones"
        logoURL:
          type: "string"
          format: "uri"
          description:  "URL pointing to an image of the merchant logo.\n\n Image requirements:
                          \n - Hosted on a secure connection (SSL).
                          \n - File size must be less than 10MB.
                          \n - Image must be in JPEG, PNG or GIF format.
                          \n - Both width and height must be between 320px and 1144px."
        bannerURL:
          type: "string"
          format: "uri"
          description:  "URL pointing to an image of the merchant banner.\n\n Image requirements:
                          \n - Hosted on a secure connection (SSL).
                          \n - File size must be less than 10MB.
                          \n - Image must be in JPEG, PNG or GIF format.
                          \n - Both width and height must be between 320px and 1144px."
        createdAt:
          type: "string"
          format: date-time
          description:  "Merchant creation date in ISO timestamp format but with type String."         

    Address:
      type: "object"
      title: "Address"
      required: ["country"]
      properties:
        "country":
          type: "string"
          pattern: "^[A-Z]{2}$"
          description:  "Two-letter ISO 3166-1 alpha-2 country code."
        "state":
          type: "string"
          description:  "State"
        "city":
          type: "string"
          description:  "City"
        "district":
          type: "string"
          description:  "District"
        "street":
          type: "string"
          description:  "Street"                      
        "number":
          type: "string"
          description:  "Number" 
        "postalCode":
          type: "string"
          description:  "Postal Code" 
        "complement":
          type: "string"
          description:  "Complement" 
        "latitude":
          type: "number"
          description:  "Latitude in degrees. Values are restricted to the range [[-90, 90]].\n\n\n\nThe precision should be at least 5 decimal places." 
        "longitude":
          type: "number"
          description:  "Longitude in degrees. Values are restricted to the range [[-180, 180]].\n\n\n\nThe precision should be at least 5 decimal places."

    ContactPhones:
      type: "object"
      title: "Contact Phones"
      required: ["@id","@type"]
      properties:
        "commercialNumber":
          type: "string"
          description:  "Telephone number of the merchant"
        "whatsappNumber":
          type: "string"
          description:  "Whatsapp number of the merchant"         
         
    Service:
      type: "object"
      title: "Merchant"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "Unique Identifier"
        "@type":
          type: "string"
          enum:
          - "SERVICE"
        status:
          type: "string"
          description:  "Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays)."    
          enum:
            - AVAILABLE
            - UNAVAILABLE  
        serviceType:
          type: "string"
          description:  "The type of service being offered."
          enum:
            - DELIVERY
            - TAKEOUT
        menuId:
          type: "string"
          description:  "The @id value of the `Menu` entity correlated to this `Service` entity."
        merchantId:
          type: "string"
          description:  "Merchant"
        serviceArea:
          type: "object"
          description:  "A conditional entity to implement (required if the Service entity associated has serviceType set to \"DELIVERY\"). Describes the geographical region in which food can be delivered."
          allOf:
            - $ref: "#/components/schemas/ServiceArea"  
        serviceAreaFee:
          type: "object"
          description:  "A conditional entity to implement (required if the Service entity associated has serviceType set to \"DELIVERY\"). Describes a fee per Radius."
          allOf:
            - $ref: "#/components/schemas/ServiceAreaFee"       
        serviceHours:
          type: "object"
          description:  "A required entity to implement. Describes the time window which users can place orders."
          allOf:
            - $ref: "#/components/schemas/ServiceHours"  

    ServiceArea:
      type: "object"
      title: "Service Area"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the service area."
        "@type":
          type: "string"
          enum:
          - "SERVICE_AREA"
        polygon:
          type: "array"
          items:
            type: "string"
            pattern: "^([+-]?([0-9]*[.])?[0-9]+[ ]+){2}([+-]?([0-9]*[.])?[0-9]+[ ]*)*$"
            description: "A polygon or multipolygon expressed as a series of three or more space delimited points. It is recommended that the first and last points be the same, but it is not required.\n\n\n\nEach point in a polygon or multipolygon is defined by a latitude point followed by a longitude point. You also must specify the points in a counter-clockwise direction."
        geoMidpointLatitude:    
          type: "number"
          description:  "Indicates the latitude coordinate at the center of the CIRCLE area."
        geoMidpointLongitude:    
          type: "number"
          description:  "Indicates the longitude coordinate at the center of the CIRCLE area."
        geoRadius:    
          type: "integer"
          description:  "Indicates the approximate radius (in meters) of the CIRCLE area."              

          
    ServiceAreaFee:
      type: "object"
      title: "Service Area Fee"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the entity describing the fee"
        "@type":
          type: "string"
          enum:
          - "SERVICE_AREA_FEE"
        geoMidpointLatitude:    
          type: "number"
          description:  "Indicates the latitude coordinate at the center of the CIRCLE area."
        geoMidpointLongitude:    
          type: "number"
          description:  "Indicates the longitude coordinate at the center of the CIRCLE area."
        value:
          type: "array"
          description:  "Price of the fee per Radius."
          items:
            type: "object"
            allOf:
              - $ref: "#/components/schemas/ServiceAreaFeeValue"  

    ServiceAreaFeeValue:
      type: "object"
      title: "Service Area Fee Value"
      required: ["@id","@type"]
      properties:
        geoRadius:    
          type: "integer"
          description:  "Indicates the approximate radius (in meters) of the CIRCLE area."    
        price:
          type: "object"
          description:  "Price of the fee"
          allOf:
            - $ref: "#/components/schemas/Price"

    Price:
      type: "object"
      title: "Price"
      required: ["@id","@type"]
      properties:
        value:    
          type: "number"
          description:  "Price value. 4 decimals places are accepted"
        currency:
          type: "string"
          pattern: "^[A-Z]{3}$"
          description:  "The 3-letter ISO 4217 currency code."

    ItemPrice:
      type: "object"
      title: "Item Price"
      required: ["@id","@type"]
      properties:
        value:    
          type: "number"
          description:  "The actual price value. 4 decimals places are accepted"
        originalValue:    
          type: "number"
          description:  "The orginal price value. 4 decimals places are accepted"  
        currency:
          type: "string"
          pattern: "^[A-Z]{3}$"
          description:  "The 3-letter ISO 4217 currency code."
     

    ServiceHours:
      type: "object"
      title: "Contact Phones"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the service hours."
        "@type":
          type: "string"
          enum:
          - "SERVICE_HOURS"
        weekHours:
          type: array
          description:  "A list of the day(s) of the week and time periods for which the service is valid."
          items: 
            type: "object"
            allOf:
              - $ref: "#/components/schemas/Hours"
        holidayHours:
          type: array
          description: "Map of holiday dates, each with optional `timePeriods`. If a date does not have a time period specified, the restaurant will be closed for that date."
          items: 
            type: "object"  
            allOf:
              - $ref: "#/components/schemas/HolidayHours"    
    
    Hours:
      type: "object"
      title: "Hours"
      required: ["@id","@type"]
      properties:
        dayOfWeek: 
          type: string
          description: "Day of the week for which these service hours are valid"
          enum:
            - "MONDAY"
            - "TUESDAY"
            - "WEDNESDAY"
            - "THURSDAY"
            - "FRIDAY"
            - "SATURDAY"
            - "SUNDAY"   
        timePeriods:
          type: "object"
          description:  "Time window from which users' orders can be placed."
          allOf:
            - $ref: "#/components/schemas/TimePeriods"
 

    TimePeriods:
      type: "object"
      title: "TimePeriods"
      required: ["@id","@type"]
      properties:
        startTime: 
          type: string
          format: time
          description: "Indicates the specific time of day in ISO format starting from which users' orders can be placed."
        endTime:
          type: string
          format: time
          description: "Indicates the specific time of day in ISO format beyond which users' orders cannot be placed."            


    HolidayHours:
      type: "object"
      title: "Holiday Hours"
      required: ["@id","@type"]
      properties:
        date:
          type: string
          format: date
          description: "date"
        timePeriods:
          type: "object"
          description:  "hours"
          allOf:
            - $ref: "#/components/schemas/TimePeriods"     

    Item:
      type: "object"
      title: "Contact Phones"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the item."
        "@type":
          type: "string"
          enum:
          - "ITEM"
        name:
          type: "string"
          description:  "Name"
          maxLength: 500
        description:
          type: "string"
          description:  "Description"
        externalCode:
          type: "string"
          description:  "External Code"
        imageUrl:
          type: "string"
          format: "uri"
          description:  "URL pointing to an image of the item.\n\n Image requirements:
                          \n - Hosted on a secure connection (SSL).
                          \n - File size must be less than 10MB.
                          \n - Image must be in JPEG, PNG or GIF format.
                          \n - Both width and height must be between 320px and 1144px."
        nutritionalInfo:
          type: "object"
          description:  "Nutrition information for the dish."
          allOf:
            - $ref: "#/components/schemas/NutritionalInfo"
        serving:
          type: "integer"
          description:  "Number of servings available for the item."   
        unit:
          type: "string"
          description:  "Unit"
        ean:
          type: "string"
          description:  "EAN"
                 

    NutritionalInfo:
      type: "object"
      title: "Contact Phones"
      required: ["@id","@type"]
      properties:
        description:
          type: "string"
          format: "UUID"
          description:  "Nutrition information in free text. For example \"Contains preservatives\"."
        calories:
          type: "string"
          description:  "The number of calories in Cal, kcal, or kJ, using the following format: value Cal or min-max Cal"
          pattern: "^[0-9]+(\\.[0-9]+)? ?(- ?[0-9]+(\\.[0-9]+)?)? [a-zA-Z]+$"
        allergen:
          type: "array"
          description:  "Allergens of this Item"
          items:
              type: "string"
              enum: 
              - "ALMONDS"
              - "ALPHA_ISOMETHYL_IONONE"
              - "ALCOHOL"
              - "AMYL_CINNAMAL"
              - "ANISE_ALCOHOL"
              - "BARLEY"
              - "BENZYL_ALCOHOL"
              - "BENZYL_BENZOATE"
              - "BENZYL_CINNAMATE"
              - "BENZYL_SALICYLATE"
              - "BRAZIL_NUTS"
              - "BUTYLPHENYL_METHYLPROPIONATE"
              - "CARROTS"
              - "CASHEW_NUTS"
              - "CELERY"
              - "CEREALS_CONTAINING_GLUTEN"
              - "CINNAMAL"
              - "CINNAMYL_ALCOHOL"
              - "CITRAL"
              - "CITRONELLOL"
              - "COCOA"
              - "CORIANDER"
              - "CORN"
              - "COUMARIN"
              - "CRUSTACEANS"
              - "EGGS"
              - "EUGENOL"
              - "EVERNIA_FURFURACEA"
              - "EVERNIA_PRUNASTRI"
              - "FARNESOL"
              - "FISH"
              - "GERANIOL"
              - "GLUTEN"
              - "HAZELNUTS"
              - "HEXYL_CINNAMAL"
              - "HYDROXYCITRONELLAL"
              - "KAMUT"
              - "LACTOSE"
              - "LUPINE"
              - "MACADAMIA_NUTS"
              - "METHYL_2_OCTYNOATE"
              - "MILK"
              - "MOLLUSCS"
              - "MUSTARD"
              - "NO_DECLARED_ALLERGENS"
              - "OAT"
              - "PEANUTS"
              - "PEAS"
              - "PECAN_NUTS"
              - "PISTACHIOS"
              - "POD_FRUITS"
              - "QUEENSLAND_NUTS"
              - "RYE"
              - "SESAME_SEEDS"
              - "SOYBEANS"
              - "SPELT"
              - "SULPHUR_DIOXIDE"
              - "TREE_NUTS"
              - "TREE_NUT_TRACES"
              - "WALNUTS"
              - "WHEAT"
        additives:
          type: "array"
          description:  "Additives of this Item"
          items:
            type: "string"

        suitableDiet:
          type: "array"
          description:  "The dish complies with the described dietary restriction"
          items:
            type: "string"
            enum:
              - "DIABETIC"
              - "GLUTEN_FREE"
              - "HALAL"
              - "HINDU"
              - "KOSHER"
              - "LOW_CALORIE"
              - "LOW_FAT"
              - "LOW_LACTOSE"
              - "LOW_SALT"
              - "VEGAN"
              - "VEGETARIAN"
        isAlcoholic:
          type: "string"
          description:  "Indicates if an item is alcoholic"           
      
    Menu:
      type: "object"
      title: "Contact Phones"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the menu."
        "@type":
          type: "string"
          enum:
          - "MENU"
        name:
          type: "string"
          description:  "Name"
          maxLength: 500
        description:
          type: "string"
          description:  "Description"
        externalCode:
          type: "string"
          description:  "External Code"          
        disclaimer:
          type: "string"
          description:  "Disclaimer"    
        disclaimerURL:
          type: "string"
          format: "uri"
          description:  "Disclaimer URL"
        categoryId:
          type: "array"
          description:  "A list of the @id values of the child `Category` entities that correspond to this `Menu` entity. Default assumes all `Category` entities are available in this menu."
          items:
            type: "string"
            format: "UUID"


    Category:
      type: "object"
      title: "Contact Phones"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the category."
        "@type":
          type: "string"
          enum:
          - "CATEGORY"
        index:
          type: "string"
          description:  "Merchant"
        name:
          type: "string"
          description:  "Merchant"
          maxLength: 500
        description:
          type: "string"
          description:  "Merchant"
        imageUrl:
          type: "string"
          description:  "Merchant"
        externalCode:
          type: "string"
          description:  "Merchant"
        status:
          type: "string"
          description:  "Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays)."    
          enum:
            - AVAILABLE
            - UNAVAILABLE
        availabilityId:
          type: "array"
          description:  "The @id values of `Availability` entities which provide details on when the category is available. Default assumes a `Category` is available at all times."
          items:
            type: string
            format: "UUID"  
        itemOfferId:
          type: "array"
          description:  "A list of the @id values of the child `ItemOffer` entities that correspond to this `Category` entity. Default assumes all `ItemOffer` entities are available in this category."
          items:
            allOf:
            - $ref: "#/components/schemas/ItemOffer/properties/@id"           
                  
    ItemOffer:
      type: "object"
      title: "Contact Phones"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the item offer."
        "@type":
          type: "string"
          enum:
          - "ITEM_OFFER"
        itemId:
          type: "string"
          description:  "The @id value of the `Item` entity correlated to this `ItemOffer` entity."
        index:
          type: "string"
          description:  "Index"  
        price:
          type: "object"
          description:  "Price of the menu item offer. Original and actual values can be informed, for showing discounts."
          allOf:
            - $ref: "#/components/schemas/ItemPrice"
        availabilityIds:
          type: "array"
          description:  "The @id values of `Availability` entities which provide details on when the menu item offer is available. Default assumes an `ItemOffer` is available at all times."
          items:
            type: string
            format: "UUID"   
        optionGroupsIds:
          type: "array"
          description:  "A list of the @id values of the child `OptionGroup` entities that correspond to this `ItemOffer` entity."
          items:
            allOf:
            - $ref: "#/components/schemas/OptionGroup/properties/@id"                      
       
    OptionGroup:
      type: "object"
      title: "Option Group"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the option group."
        "@type":
          type: "string"
          enum:
          - "OPTION_GROUP"
        index:
          type: "string"
          description:  "Index"              
        name:
          type: "string"
          description:  "Name"
          maxLength: 500
        description:
          type: "string"
          description:  "Description"
        externalCode:
          type: "string"
          description:  "External Code"
        status:
          type: "string"
          description:  "Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays)."    
          enum:
            - AVAILABLE
            - UNAVAILABLE
        minPermitted:
          type: "string"
          description:  "The minimum number of options which should be selected in the option group."
        maxPermitted:
          type: "string"
          description:  "The maximum number of options which should be selected in the option group."
        options:
          type: array
          description: "A list of `Option` entities that correspond to this option group"
          items: 
            type: "object"
            description:  "options"
            allOf:
              - $ref: "#/components/schemas/Option"      

    Option:
      type: "object"
      title: "Contact Phones"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the option."
        "@type":
          type: "string"
          enum:
          - "OPTION"
        itemId:
          type: "string"
          description:  "The @id value of the `Item` entity correlated to this `Option` entity."
        index:
          type: "string"
          description:  "index"  
        price:
          type: "object"
          description:  "Price of the menu item offer. Original and actual values can be informed, for showing discounts."
          allOf:
            - $ref: "#/components/schemas/ItemPrice"
        maxPermitted:
          type: "string"
          description:  "The maximum quantity of this option which can be selected in the option group."      
          
   
    Availability:
      type: "object"
      title: "Availability"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the availability."
        "@type":
          type: "string"
          enum:
          - "AVAILABILITY"       
        startDate:
          type: "string"
          description:  "Start Date"
        endDate:
          type: "string"
          description:  "End Date"
        hours:
            type: "object"
            description:  "Hours"
            allOf:
              - $ref: "#/components/schemas/Hours"              
    Order:
      type: "object"
      title: "Order"
      required: ["@id","@type"]
      properties:
        "@id":
          type: "string"
          format: "UUID"
          description:  "A unique identifier of the availability."
        "@type":
            type: "string"
            enum:
              - "DELIVERY"
              - "TAKEOUT"
        displayId:
          type: "string"
          description: "Customer ID order shown on the screen."
        createdAt:
          type: "string"
          format: date-time
          description:  "Order creation date in ISO timestamp format." 
        orderTiming:
            type: "string"
            enum:
              - "Instant"
              - "Scheduled"
        preparationStartDateTime:
            type: "string"
            description: "Order preparation start time."
        merchant:
            type: "object"
            properties:
              "@id":
                allOf:
                  - $ref: "#/components/schemas/Merchant/properties/@id"
              name:
                allOf:
                  - $ref: "#/components/schemas/Merchant/properties/name"
        items:
          type: "array"
          items:
            type: "object"
            required: ["@id"]
            properties:
              "@id":
                type: "string"
                format: "UUID"
              index:
                type: "number"